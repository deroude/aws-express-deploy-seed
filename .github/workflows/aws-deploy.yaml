
# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main
jobs:
  deploy_to_aws:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache multiple paths
        uses: actions/cache@v3
        with:
          path: |
            terraform/terraform.tfstate
          key: ${{runner.os}}-tfstate
      - name: create aws terraform config
        working-directory: ./terraform
        run: |
            touch terraform.tfvars
            echo "aws_access_key = \"$AWS_ACCESS_KEY\"" >> terraform.tfvars
            echo "aws_secret_key = \"$AWS_SECRET_KEY\"" >> terraform.tfvars
        shell: bash
        env:
          AWS_ACCESS_KEY : ${{secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_KEY : ${{secrets.AWS_SECRET_KEY}}

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply

      - name: Create ZIP deployment package
        run: zip -r deploy_package.zip ./app/*

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: "us-east-1"

      - name: Upload package to S3 bucket
        run: aws s3 cp deploy_package.zip s3://web-app-deploy-bucket/

      - name: Create new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name demo-web-app \
          --source-bundle S3Bucket="web-app-deploy-bucket",S3Key="deploy_package.zip" \
          --version-label "ver-${{ github.sha }}" \
          --description "commit-sha-${{ github.sha }}"
      - name: Deploy new ElasticBeanstalk Application Version
        run: aws elasticbeanstalk update-environment --environment-name demo-web-env --version-label "ver-${{ github.sha }}"